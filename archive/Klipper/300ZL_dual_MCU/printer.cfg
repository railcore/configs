# Railcore 300ZL Klipper config
#
# Created by chainsol
#
# Dual MKS Gen-L control boards
# TMC2130 drivers for all axes
#
# Please see a pinout for your board and check against these pin assignments
# Please DO NOT copy and directly use this file - check EVERY section
# I am not responsible for damage to you, your printer, your house, your cat, etc

# TMC2130 X stepper
[stepper_x]
step_pin: ar54
dir_pin: !ar55
enable_pin: !ar38
endstop_pin: ^!ar3
# Assuming 16x microstepping
step_distance: 0.004962
position_endstop: 0
position_min: 0
position_max: 300
# You may find a faster homing speed is acceptable
homing_speed: 30

[tmc2130 stepper_x]
cs_pin: ar53
microsteps: 16
interpolate: True
run_current: 1.000
# If you wish to enable stealthchop, set this to a speed your printer won't skip at
stealthchop_threshold: 0
# If you wish to use sensorless homing, configure the following pin
#diag1_pin:

[stepper_y]
step_pin: ar60
dir_pin: ar61
enable_pin: !ar56
endstop_pin: ^!ar14
step_distance: 0.004962
position_endstop: 0
position_max: 300
homing_speed: 30

[tmc2130 stepper_y]
cs_pin: ar49
microsteps: 16
interpolate: True
run_current: 1.000
stealthchop_threshold: 0
#diag1_pin:

# Z steppers - there are three Z steppers for the ZL build
[stepper_z]
# Y pins on the second MCU
step_pin: z:ar60
dir_pin: !z:ar61
enable_pin: !z:ar56
step_distance: 0.002500
# See Klipper's probe config example as to how this works
endstop_pin: probe:z_virtual_endstop
position_max: 300
position_min: -0.35
homing_speed: 10

[tmc2130 stepper_z]
cs_pin: z:ar53
# You may wish to increase microstepping - my build uses TR8*2 screws
microsteps: 2
interpolate: True
run_current: .650
stealthchop_threshold: 0
#diag1_pin:

[stepper_z1]
# X pins on the second MCU
step_pin: z:ar54
dir_pin: !z:ar55
enable_pin: !z:ar38
step_distance: 0.002500

[tmc2130 stepper_z1]
cs_pin: z:ar49
microsteps: 2
interpolate: True
run_current: .650
stealthchop_threshold: 0
#diag1_pin:

[stepper_z2]
# Z pins on the second MCU
step_pin: z:ar46
dir_pin: !z:ar48
enable_pin: !z:ar62
step_distance: 0.002500

[tmc2130 stepper_z2]
cs_pin: z:ar42
microsteps: 2
interpolate: True
run_current: .650
stealthchop_threshold: 0
#diag1_pin:

[extruder]
filament_diameter: 1.750
step_pin: ar46
dir_pin: !ar48
enable_pin: !ar62
step_distance: 0.001194
nozzle_diameter: 0.400
# See Klipper's pressure advance calibration to tune this number
pressure_advance: 0.05
heater_pin: ar10
sensor_type: ATC Semitec 104GT-2
sensor_pin: analog13
control: pid
pid_Kp=26.851
pid_Ki=1.085
pid_Kd=166.140
min_temp: 0
max_temp: 300

[tmc2130 extruder]
cs_pin: ar42
microsteps: 16
# The extruder isn't noisy even without interpolation - do enable it if you wish
interpolate: False
run_current: .800
stealthchop_threshold: 0
#diag1_pin:

[heater_bed]
heater_pin: ar8
sensor_type: EPCOS 100K B57560G104F
#sensor_type: NTC 100K beta 3950
sensor_pin: analog14
control: pid
pid_Kp=47.076
pid_Ki=0.659
pid_Kd=840.308
min_temp: 0
max_temp: 130

# PROBE section
# This build used a BLtouch - configuration for an IR sensor would merely skip the servo
[servo bltouch]
pin: z:ar11
maximum_servo_angle: 180
minimum_pulse_width: 0.0006
maximum_pulse_width: 0.0024

[probe]
pin: z:ar19
z_offset: 2.800
activate_gcode:
    SET_SERVO SERVO=bltouch ANGLE=160
    SET_SERVO SERVO=bltouch ANGLE=90
    G4 P200
    SET_SERVO SERVO=bltouch ANGLE=10
    SET_SERVO SERVO=bltouch ANGLE=60
    G4 P200
deactivate_gcode:
    SET_SERVO SERVO=bltouch ANGLE=90

# Override Z homing to use the probe
# Other axes won't use this homing override, e.g G28 X won't, but G28 or G28 Z will
[homing_override]
axes: z
set_position_z: 5
gcode:
    G90
    G1 Z7 F600
    G28 X0 Y0
    G1 X150 Y150 F9000
    SET_SERVO SERVO=bltouch ANGLE=160
    SET_SERVO SERVO=bltouch ANGLE=90
    G28 Z0
    G1 Z5 F600
    G28 X0 Y0

# Mesh Bed Leveling. Optional due to the ZL feature
[bed_mesh]
speed: 150
#   The speed (in mm/s) of non-probing moves during the
#   calibration. The default is 50.
horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
samples: 2
#   The number of times to probe each point.  The probed z-values
#   will be averaged.  The default is to probe 1 time.
sample_retract_dist: 2.0
#   The distance (in mm) to retract between each sample if
#   sampling more than once.  Default is 2mm.
min_point: 20,0
#   An X,Y point defining the minimum coordinate to probe on
#   the bed. Note that this refers to the nozzle position,
#   and take care that you do not define a point that will move
#   the probe off of the bed. This parameter must be provided.
max_point: 275,250
#   An X,Y point defining the maximum coordinate to probe on
#   the bed. Follow the same precautions as listed in min_point.
#   Also note that this does not necessarily define the last point
#   probed, only the maximum coordinate. This parameter must be provided.
probe_count: 7,7
#   A comma separated pair of integer values (X,Y) defining the number
#   of points to probe along each axis. A single value is also valid,
#   in which case that value will be for both axes. Default is 3,3
#   which probes a 3x3 grid.
fade_start: 1.0
#   The z-axis position in which to start phasing z-adjustment out.
#   Default is 1.0.
fade_end: 10.0
#   The z-axis position in which phase out is complete. If this
#   value is less than or equal to fade_start then phasing out
#   is disabled. Default is 10.0.
#split_delta_z: .025
#   The amount of Z difference (in mm) along a move that will
#   trigger a split. Default is .025.
#move_check_distance: 5.0
#   The distance (in mm) along a move to check for split_delta_z.
#   This is also the minimum length that a move can be split. Default
#   is 5.0.
#mesh_pps: 2,2
#   A comma separated pair of integers (X,Y) defining the number of
#   points per segment to interpolate in the mesh along each axis. A
#   "segment" can be defined as the space between each probed
#   point. The user may enter a single value which will be applied
#   to both axes.  Default is 2,2.
#algorithm: lagrange
#   The interpolation algorithm to use. May be either "langrange"
#   or "bicubic". This option will not affect 3x3 grids, which
#   are forced to use lagrange sampling.  Default is lagrange.
#bicubic_tension: .2
#   When using the bicubic algorithm the tension parameter above
#   may be applied to change the amount of slope interpolated.
#   Larger numbers will increase the amount of slope, which
#   results in more curvature in the mesh. Default is .2.
#manual_probe:
#   See the manual_probe option of [bed_tilt] for details. The default
#   is false if a [probe] config section is present and true otherwise.

# 3 stepper Z leveling - you will need to ensure your Z steppers match the configuration
# First position is the first configured stepper (stepper_z), second is stepper_z1, third is stepper_z2
# measure and adjust the z positions to match your build
[z_tilt]
speed: 150
samples: 3
z_positions:
    -46.17,0
    -46.17,235
    352.43,103
# Less points may be acceptable or preferable
points:
    275,250
    275,108
    275,0
    150,0
    150,108
    150,250
    20,250
    20,108
    20,0

# Part cooling fan
[fan]
pin: ar9
max_power: 1.00

# Dual MCU boards - your serial device will vary
[mcu z]
serial: /dev/serial/by-path/platform-3f980000.usb-usb-0:1.3:1.0-port0
pin_map: arduino

[mcu]
serial: /dev/serial/by-path/platform-3f980000.usb-usb-0:1.2:1.0-port0
pin_map: arduino

# Optional - may increase performance
[virtual_sdcard]
path: ~/.octoprint/uploads/

[printer]
kinematics: corexy
max_velocity: 600
max_accel: 4000
max_z_velocity: 15
max_z_accel: 20
square_corner_velocity: 10.0
